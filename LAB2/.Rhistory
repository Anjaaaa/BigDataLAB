?glm
source('~/OwnCloud/Uni/Umea/Big Data/LABs/git/BigDataLAB/Task1.R')
setwd("~/OwnCloud/Uni/Umea/Big Data/LABs/git/BigDataLAB")
source('~/OwnCloud/Uni/Umea/Big Data/LABs/git/BigDataLAB/Task1.R')
Data
source('~/OwnCloud/Uni/Umea/Big Data/LABs/git/BigDataLAB/Task1.R')
library(caret)
compute_lda = classifier_lda(ValData)
correctly_classified(ValData,compute_lda)
compute_lr = classifier_lr(ValData)
correctly_classified(ValData,compute_lr)
compute_knn = classifier_knn(ValData[,-1],TrainData,which.max(correct_tune))
correctly_classified(ValData,compute_knn)
########################################################
# Use Test Data
Test = read.table("BreastCancerDataTest.txt", header=TRUE)
test_lda = classifier_lda(Test)
correctly_classified(Test,test_lda)
test_knn = classifier_knn(Test[,-1],Data,which.max(correct_tune))
correctly_classified(Test,test_knn)
test_lr = classifier_lr(Test)
correctly_classified(Test,test_lr)
lda
source('~/OwnCloud/Uni/Umea/Big Data/LABs/git/BigDataLAB/Task1.R')
# 1.5 Validation
library(caret)
compute_lda = classifier_lda(ValData)
correctly_classified(ValData,compute_lda)
compute_lr = classifier_lr(ValData)
correctly_classified(ValData,compute_lr)
compute_knn = classifier_knn(ValData[,-1],TrainData,which.max(correct_tune))
correctly_classified(ValData,compute_knn)
########################################################
# Use Test Data
Test = read.table("BreastCancerDataTest.txt", header=TRUE)
test_lda = classifier_lda(Test)
correctly_classified(Test,test_lda)
test_knn = classifier_knn(Test[,-1],Data,which.max(correct_tune))
correctly_classified(Test,test_knn)
test_lr = classifier_lr(Test)
correctly_classified(Test,test_lr)
source('~/OwnCloud/Uni/Umea/Big Data/LABs/git/BigDataLAB/Task1.R')
library(caret)
compute_lda = classifier_lda(ValData)
correctly_classified(ValData,compute_lda)
compute_lr = classifier_lr(ValData)
correctly_classified(ValData,compute_lr)
compute_knn = classifier_knn(ValData[,-1],TrainData,which.max(correct_tune))
correctly_classified(ValData,compute_knn)
########################################################
# Use Test Data
Test = read.table("BreastCancerDataTest.txt", header=TRUE)
test_lda = classifier_lda(Test)
correctly_classified(Test,test_lda)
test_knn = classifier_knn(Test[,-1],Data,which.max(correct_tune))
correctly_classified(Test,test_knn)
test_lr = classifier_lr(Test)
correctly_classified(Test,test_lr)
source('~/OwnCloud/Uni/Umea/Big Data/LABs/git/BigDataLAB/Task1.R')
source('~/OwnCloud/Uni/Umea/Big Data/LABs/git/BigDataLAB/Task1.R')
source('~/OwnCloud/Uni/Umea/Big Data/LABs/git/BigDataLAB/Task1.R')
source('~/OwnCloud/Uni/Umea/Big Data/LABs/git/BigDataLAB/Task1.R')
library(caret)
compute_lda = classifier_lda(ValData)
correctly_classified(ValData,compute_lda)
compute_lr = classifier_lr(ValData)
correctly_classified(ValData,compute_lr)
compute_knn = classifier_knn(ValData[,-1],TrainData,which.max(correct_tune))
correctly_classified(ValData,compute_knn)
source('~/OwnCloud/Uni/Umea/Big Data/LABs/git/BigDataLAB/Task1.R')
source('~/OwnCloud/Uni/Umea/Big Data/LABs/git/BigDataLAB/Task1.R')
# 1.5 Validation
library(caret)
lda_val <- lda(TrainData$Diagnosis ~ ., data=TrainData[,-1])
compute_lda = classifier_lda(ValData,lda_val)
correctly_classified(ValData,compute_lda)
diagnosis_bin_val <- array(0, dim=c(length(TrainData$Diagnosis),1))
for (i in 1:length(diagnosis_bin_val)){
if (TrainData$Diagnosis[i] == "B"){
diagnosis_bin_val[i] = 0
} else {
diagnosis_bin_val[i] = 1
}
}
logreg_val <- glm(diagnosis_bin_val ~ ., family=binomial(link = "logit"), data=TrainData[,-1])
compute_lr = classifier_lr(ValData, logreg_val)
correctly_classified(ValData,compute_lr)
compute_knn = classifier_knn(ValData[,-1],TrainData,which.max(correct_tune))
correctly_classified(ValData,compute_knn)
########################################################
# Use Test Data
Test = read.table("BreastCancerDataTest.txt", header=TRUE)
test_lda = classifier_lda(Test,lda_all)
correctly_classified(Test,test_lda)
test_knn = classifier_knn(Test[,-1],Data,which.max(correct_tune))
correctly_classified(Test,test_knn)
test_lr = classifier_lr(Test,logreg_all)
correctly_classified(Test,test_lr)
setwd("~/OwnCloud/Uni/Umea/Big Data/LABs/git/BigDataLAB")
source('~/OwnCloud/Uni/Umea/Big Data/LABs/git/BigDataLAB/Assignment2_3.R')
source('~/OwnCloud/Uni/Umea/Big Data/LABs/git/BigDataLAB/DataGeneration.R')
source('~/OwnCloud/Uni/Umea/Big Data/LABs/git/BigDataLAB/Assignment2_3.R')
x1
